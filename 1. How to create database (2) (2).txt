1. How to create database

create database myDB;(run)

(to use database)  (to drop the database)
use myDB;           drop database myDB;

(alter database)
alter database myDB read only = 1;(if a database is in read only we can't do any modifications but we can access to the data in it)

2. How to create tables ( a table in relational database contains rows and column)

 create table employees(
employee_id int,
first_name varchar (50),
last_name varchar(50),
hourly_pay decimals(5, 2),
hire_date date);

(selecting table)
select * from employees;

(to rename the table)
rename table employees to workers;

alter table employees
add phone_number varchar(50);

alter table employees
rename column phnone_number to email;

alter table employees
modify column email varchar(100);

alter table employees
modify email varchar(100)
after last_name;

[if we want to modify our column to first use (first)]

(to drop column)
alter table employees
drop column email;


3. Inserting rows into a table

insert into employees
values(1,"vengal", "rao",25.56,"2024-08-14"),
      (2,"vengal", "rao",25.56,"2024-08-14"),
      (3,"vengal", "rao",25.56,"2024-08-14"),
      (4,"vengal", "rao",25.56,"2024-08-14");

(we can insert just selected columns like)

insert into employees(employee_id,first_name,last_name)
values (5,"vengal", "rao");

4. Select data from a table 
(if we want specific column)

select first_name,last_name
from employees;

[where clause for smnbthng specific]
select * from employees
where employees_id = 1;

select * from employees
where first_name = "vengal";

select * from employees
where hourly_pay >= 15;

select * from employees
where hire_date <= "2024-08-13";

select * from employees
where employees_id != 1;   (! indicates not equal to)

select * from employees
where hire_date is null;  (we can't write  = in the place of is)


5.Update and delete the data from database

update employees
set hourlu_pay = 10.25,
    hire_date="2024-08-15"
where employee_id = 5;

[to delete]
delete from employees          (we shouldn't execute only delete from employees because it deletes full table)
where employee_id = 5;


6.In this we learn about auto commit, commit & rollback

( by default autocommit is on which saves data automatically)

set autocommit = off;

(to save the data)
commit

(by mistake we delete the data after commit to undo we use rollback)
rollback 

7.to get current date and time

create table test(
my_date date,
my_time time,
my_datetime datetime);

insert into test
values(current_date(),current_time(),no);  { to get tomorrow date current_date() + 1, to get yesterday current_date - 1}
 
drop table test;

8. unique constraint (that all values in a constraint are different)

create table products(
product_id int,
product_name varchar(25) unique,
price decimal (4,2)
);

[if we forgot to add unique constraint to table]

alter table 
add constraint
unique(product_name);

insert into products
values(1 , "tomatos",25.22),
      (2, "potatos",22.21),
      (3,"brinjal",22.21);

9.not null constraint  (not null constraint can be added to column when ever we add anything the value can't be null)

 create table products(
product_id int,
product_name varchar(25),
price decimal (4,2) not null
);

(table that already exist)

alter table products
modify price decimal(4, 2);  [we can't enter null but we can enter 0]

10.check constraint         (check what value placed in the column)

 create table employees(
employee_id int,
first_name varchar (50),
last_name varchar(50),
hourly_pay decimals(5, 2),   [to add check we should write at th end]
hire_date date,
check (hourly_pay >=10.00));   

 create table employees(
employee_id int,
first_name varchar (50),
last_name varchar(50),                    [to drop or modify we can give a name]

hourly_pay decimals(5, 2),
hire_date date,
constraint chk_hrly_pay check (hourly_pay >=10.00));

[already exist table]

alter table employees
add constraint chk_hrly_pay check(hourly_pay >= 10.00);

(insert some employees)

11.default constraint        (when inserting a new if we do not assign a value and apply default constraint it gives automate values)


 create table products(
product_id int,
product_name varchar(25),
price decimal (4,2) default 0.00
);

insert into products
values(100, "tomatos",25.22),
      (101, "potatos",22.21),
      (102,"brinjal",22.21);

[to already exist table]

alter table products
alter price set default 0.00;

insert into products(product_id,product_name)
values(103,"straw"),
       (104,"napkin");


12.primary key constraint            (primay key is applied to column each value should be both unique and not null)

create table transaction(
 transaction_id int primary key,
 amount decimal(5, 2));
[table already exist]

alter table transaction
add constraint 
primary key(transaction_id);

insert into transaction
value(1000, 4.99);

13.auto increment attribute               (the auto increment attribute can be applied to column that is set as a key when we add a new row it increments its value atomatically)

create table transaction(
 transaction_id int primary key auto_increment,
 amount decimal(5, 2));

insert into transaction(amount)
value( 4.99)
     (2.99)
      (3.99);

[to add a different value]

alter table transactions
auto_increment=100;


14.foreign key constraint                  (it is a primary  that found in another table)

create customers(
customer_id int primary key auto_increment,
first_name varchar(50),
last_name varchar(50)
);

insert into customers(first_name,last_name)
values("fred","fish"),
      ("jam","jim"),
      ("larry","lobster");

create table transactions(
 transaction_id int primary key auto_increment,
 amount decimal(5, 2),
 customer_id int,
 foreign key(customer_id) reference customers(customer_id)
);

[if we need to drop a foreign key]

alter table transactions
drop foreign key (note:name of the foreign key);

[to give an unique name or to apply foreign key to the existing table]

alter table transaction
add constraint (unique name)
foreign key(customer_id) references customer(customer_id);


alter table transaction
auto_increment = 1000;

insert into transactions(amount, customer_id)
values(2.00,3),
      (2.89,2),                                     (it is a primary  that found in another table)
      (4.99,3),
      (2.00,1);


15.joins  (A join is a clause that is used to combines rows from to or more tables based on based on a related column between them such as foreign key)

create table customers(
customer_id int primary key auto_increment,
first_name varchar(50),
last_name varchar(50)
);

insert into customers(first_name,last_name)
values("fred","fish"),
      ("jam","jim"),
      ("larry","lobster");

create table transactions(
 transaction_id int primary key auto_increment,
 amount decimal(5, 2),
 customer_id int,
 foreign key(customer_id) references customers(customer_id)
);

insert into transactions(amount, customer_id)
values(2.00,3),
      (2.89,2),                                     
      (4.99,3),
      (2.00,1);

insert into transactions(amount,customer_id)
values (1.00,null);
       
insert into customers(first_name,last_name)
values("ricky","bhai");

[inner join]

select *
from transactions inner join customers
on transactions.customer_id = customers.customer_id;


select transaction_id,amount,first_name,last_name
from transactions inner join customers
on transactions.customer_id = customers.customer_id;

[left join]     (in left join we will display every thing of our table from left.if any matches it will pull the data from right)


select *
from transactions left join customers
on transactions.customer_id = customers.customer_id;

[right join]     (we will display the entire table of right .if any matches it will pull the data from left)

select *
from transactions right join customers
on transactions.customer_id = customers.customer_id;

16.